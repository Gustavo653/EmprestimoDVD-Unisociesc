// <auto-generated />
using System;
using EmprestimoDVD.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmprestimoDVD.Persistence.Migrations
{
    [DbContext(typeof(EmprestimoDVDContext))]
    [Migration("20230415000350_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmprestimoDVD.Domain.Entidades.DVD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArtistaPrincipalId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassificacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("DiretorId")
                        .HasColumnType("int");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Sinopse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaPrincipalId");

                    b.HasIndex("ClassificacaoId");

                    b.HasIndex("DiretorId");

                    b.HasIndex("GeneroId");

                    b.ToTable("DVD");
                });

            modelBuilder.Entity("EmprestimoDVD.Domain.Entidades.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AmigoId")
                        .HasColumnType("int");

                    b.Property<int?>("DVDId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDevolver")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AmigoId");

                    b.HasIndex("DVDId");

                    b.ToTable("Emprestimo");
                });

            modelBuilder.Entity("EmprestimoDVD.Domain.Entidades.FaixaEtaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ate")
                        .HasColumnType("int");

                    b.Property<int>("De")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FaixaEtaria");
                });

            modelBuilder.Entity("EmprestimoDVD.Domain.Entidades.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("EmprestimoDVD.Domain.Entidades.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pessoa");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EmprestimoDVD.Domain.Entidades.Amigo", b =>
                {
                    b.HasBaseType("EmprestimoDVD.Domain.Entidades.Pessoa");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaixaEtariaId")
                        .HasColumnType("int");

                    b.Property<long>("NumTelefone")
                        .HasColumnType("bigint");

                    b.HasIndex("FaixaEtariaId");

                    b.HasDiscriminator().HasValue("Amigo");
                });

            modelBuilder.Entity("EmprestimoDVD.Domain.Entidades.DVD", b =>
                {
                    b.HasOne("EmprestimoDVD.Domain.Entidades.Pessoa", "ArtistaPrincipal")
                        .WithMany()
                        .HasForeignKey("ArtistaPrincipalId");

                    b.HasOne("EmprestimoDVD.Domain.Entidades.FaixaEtaria", "Classificacao")
                        .WithMany()
                        .HasForeignKey("ClassificacaoId");

                    b.HasOne("EmprestimoDVD.Domain.Entidades.Pessoa", "Diretor")
                        .WithMany()
                        .HasForeignKey("DiretorId");

                    b.HasOne("EmprestimoDVD.Domain.Entidades.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId");

                    b.Navigation("ArtistaPrincipal");

                    b.Navigation("Classificacao");

                    b.Navigation("Diretor");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("EmprestimoDVD.Domain.Entidades.Emprestimo", b =>
                {
                    b.HasOne("EmprestimoDVD.Domain.Entidades.Amigo", "Amigo")
                        .WithMany()
                        .HasForeignKey("AmigoId");

                    b.HasOne("EmprestimoDVD.Domain.Entidades.DVD", "DVD")
                        .WithMany()
                        .HasForeignKey("DVDId");

                    b.Navigation("Amigo");

                    b.Navigation("DVD");
                });

            modelBuilder.Entity("EmprestimoDVD.Domain.Entidades.Amigo", b =>
                {
                    b.HasOne("EmprestimoDVD.Domain.Entidades.FaixaEtaria", "FaixaEtaria")
                        .WithMany()
                        .HasForeignKey("FaixaEtariaId");

                    b.Navigation("FaixaEtaria");
                });
#pragma warning restore 612, 618
        }
    }
}
